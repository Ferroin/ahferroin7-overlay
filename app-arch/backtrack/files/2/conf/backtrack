# /etc/conf.d/backtrack
# Configuration file for backtrack

# DUMPUMOUNT, DUMPFREEZE, and DUMPSNAP specify devices to dump.
# They should be specified as a space seprated list of full absolute
# paths to the underlying devices (that is, the path in /dev that
# points to the device that the filesystem# is on), at the moment, we
# don't support LABEL= or UUID= syntax.
# As a general guideline, you probably want to include both your root
# partition and your boot partition here, as well as anything that has data
# on it that is not trivial to reproduce (/home for example).

# DUMPUMOUNT lists filesystems that should be unmounted before dumping.
# These filesystems are those other than root that are only infrequently
# accessed, /boot is a perfect example.
#DUMPUMOUNT=''

# DUMPFREEZE lists filesystems that should be left mounted but have fsfreeze
# called before dumping.  This should be used for filesystems that can't be
# unmounted, but don't need real-time write access, the root filesystem is
# a perfect example for this.
#DUMPFREEZE=''

# DUMPSNAP lists filesystems on lvm that should be snapshotted then have the
# snapshot dumped.  This is less efficient with respect to processor time than
# the other two options, but produces lower write latency than the freezing
# the filesystem does.  It should be used for filesystems that do a very large
# ammount of I/O, or need real-time write access, such as filesystems for
# storing databases or log files.
#DUMPSNAP=''

# DUMPTIME specifies what time of day you want the backup to happen.
# It should be the Hour of the day in 24 hour format (midnight is 0, 11PM
# is 23).  Backtrack will automatically run the required dumps some time
# either during this hour or at the start of the NEXT hour.  We default to
# running at midnight.
DUMPTIME=0

# DUMPDEST specifies the location to store the dump files at, it must be
# an absolute directory path (not a device, tape, or URI).  It also should
# be on a filesystem that is NOT listed in DUMPLIST, otherwise you will end
# with dump dumping it's own dumpfiles, which is BAD.  If possible, a
# (reliable) network filesystem is prefered as it decouples the data from
# the primary point of failure (the local disk); otherwise, you should
# probably use a dedicated filesystem (a mirrored LV works well for this).
#DUMPDEST="/path/to/backup/storage"

# KEEPMONTHS specifies how many months worth of level 0 dumps (full backups)
# to keep.  Keep in mind that these will take up a lot more space than the
# weekly and daily backups, so you shouldn't set this number too high.
# We default to keeping 4 months worth, as that provides a good balance
# between recovery ability and disk usage.
KEEPMONTHS=4

# KEEPWEEKS specifies how many weeks worth of incremental dumps to keep
# We default to four weeks, as the monthly backups are full backups anyway
KEEPWEEKS=4
